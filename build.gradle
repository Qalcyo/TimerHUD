buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
	maven {
            name = "JitPack"
            url = "https://jitpack.io/"
        }
        flatDir dirs: 'libs'
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:86b2392"
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72'
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: "com.github.johnrengelman.shadow"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = project.forgeVersion
    runDir = "run"
	replace("@VER@", project.version)
    mappings = project.mcpVersion
    makeObfSourceJar = false
}

repositories {
    jcenter()
    maven { url "https://repo.sk1er.club/repository/maven-public/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72")
    implementation 'com.github.wyvest:WyLib:0d5efa2c9a'
    implementation("club.sk1er:Vigilance:100-10809-SNAPSHOT")
    implementation('org.projectlombok:lombok:1.18.16')
    annotationProcessor('org.projectlombok:lombok:1.18.16')
}

jar {
    archiveName = "$baseName.$extension"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info", "LICENSE.txt"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

// asbyth cool process resources
task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

shadowJar {
	dependencies {
        include(dependency('com.github.wyvest:WyLib:0d5efa2c9a'))
		include(dependency('club.sk1er:Vigilance:100-10809-SNAPSHOT'))
		include(dependency('org.projectlombok:lombok:1.18.16'))
    	}

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveName = "$baseName.$extension"
    classifier = ''
    exclude "dummyThing"
    exclude "club/sk1er/vigilance/example"
    exclude "module-info.class"
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

tasks.moveResources.dependsOn processResources
tasks.classes.dependsOn moveResources
//end asbyth cool resource fix

tasks.reobfJar.dependsOn(tasks.shadowJar)
